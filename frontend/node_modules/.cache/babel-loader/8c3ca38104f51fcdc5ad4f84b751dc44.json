{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for hello\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/*eslint-disable*/\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.hello = require('./hello_service_pb.js');\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\nproto.hello.HelloServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.hello.HelloServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.hello.HelloRequest,\n *   !proto.hello.HelloResponse>}\n */\n\n\nconst methodDescriptor_HelloService_SayHello = new grpc.web.MethodDescriptor('/hello.HelloService/SayHello', grpc.web.MethodType.UNARY, proto.hello.HelloRequest, proto.hello.HelloResponse,\n/**\n * @param {!proto.hello.HelloRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.hello.HelloResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.hello.HelloRequest,\n *   !proto.hello.HelloResponse>}\n */\n\nconst methodInfo_HelloService_SayHello = new grpc.web.AbstractClientBase.MethodInfo(proto.hello.HelloResponse,\n/**\n * @param {!proto.hello.HelloRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.hello.HelloResponse.deserializeBinary);\n/**\n * @param {!proto.hello.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.hello.HelloResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.hello.HelloResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.hello.HelloServiceClient.prototype.sayHello = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/hello.HelloService/SayHello', request, metadata || {}, methodDescriptor_HelloService_SayHello, callback);\n};\n/**\n * @param {!proto.hello.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.hello.HelloResponse>}\n *     A native promise that resolves to the response\n */\n\n\nproto.hello.HelloServicePromiseClient.prototype.sayHello = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/hello.HelloService/SayHello', request, metadata || {}, methodDescriptor_HelloService_SayHello);\n};\n\nmodule.exports = proto.hello;","map":{"version":3,"sources":["/home/cyan/Desktop/projects/go-grpc-react-todo/frontend/src/api/hello/hello_service_grpc_web_pb.js"],"names":["grpc","web","require","proto","hello","HelloServiceClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","HelloServicePromiseClient","methodDescriptor_HelloService_SayHello","MethodDescriptor","MethodType","UNARY","HelloRequest","HelloResponse","request","serializeBinary","deserializeBinary","methodInfo_HelloService_SayHello","AbstractClientBase","MethodInfo","prototype","sayHello","metadata","callback","rpcCall","unaryCall","module","exports"],"mappings":"AAAA;;;;;AAMA;;AACA;AAGA,MAAMA,IAAI,GAAG,EAAb;AACAA,IAAI,CAACC,GAAL,GAAWC,OAAO,CAAC,UAAD,CAAlB;AAEA,MAAMC,KAAK,GAAG,EAAd;AACAA,KAAK,CAACC,KAAN,GAAcF,OAAO,CAAC,uBAAD,CAArB;AAEA;;;;;;;;;AAQAC,KAAK,CAACC,KAAN,CAAYC,kBAAZ,GACI,UAASC,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,EAAyC;AAC3C,MAAI,CAACA,OAAL,EAAcA,OAAO,GAAG,EAAV;AACdA,EAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,MAApB;AAEA;;;;AAGA,OAAKC,OAAL,GAAe,IAAIT,IAAI,CAACC,GAAL,CAASS,iBAAb,CAA+BF,OAA/B,CAAf;AAEA;;;;AAGA,OAAKG,SAAL,GAAiBL,QAAjB;AAED,CAfD;AAkBA;;;;;;;;;;AAQAH,KAAK,CAACC,KAAN,CAAYQ,yBAAZ,GACI,UAASN,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,EAAyC;AAC3C,MAAI,CAACA,OAAL,EAAcA,OAAO,GAAG,EAAV;AACdA,EAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,MAApB;AAEA;;;;AAGA,OAAKC,OAAL,GAAe,IAAIT,IAAI,CAACC,GAAL,CAASS,iBAAb,CAA+BF,OAA/B,CAAf;AAEA;;;;AAGA,OAAKG,SAAL,GAAiBL,QAAjB;AAED,CAfD;AAkBA;;;;;;;;AAMA,MAAMO,sCAAsC,GAAG,IAAIb,IAAI,CAACC,GAAL,CAASa,gBAAb,CAC7C,8BAD6C,EAE7Cd,IAAI,CAACC,GAAL,CAASc,UAAT,CAAoBC,KAFyB,EAG7Cb,KAAK,CAACC,KAAN,CAAYa,YAHiC,EAI7Cd,KAAK,CAACC,KAAN,CAAYc,aAJiC;AAK7C;;;;AAIA,UAASC,OAAT,EAAkB;AAChB,SAAOA,OAAO,CAACC,eAAR,EAAP;AACD,CAX4C,EAY7CjB,KAAK,CAACC,KAAN,CAAYc,aAAZ,CAA0BG,iBAZmB,CAA/C;AAgBA;;;;;;;AAMA,MAAMC,gCAAgC,GAAG,IAAItB,IAAI,CAACC,GAAL,CAASsB,kBAAT,CAA4BC,UAAhC,CACvCrB,KAAK,CAACC,KAAN,CAAYc,aAD2B;AAEvC;;;;AAIA,UAASC,OAAT,EAAkB;AAChB,SAAOA,OAAO,CAACC,eAAR,EAAP;AACD,CARsC,EASvCjB,KAAK,CAACC,KAAN,CAAYc,aAAZ,CAA0BG,iBATa,CAAzC;AAaA;;;;;;;;;;;AAUAlB,KAAK,CAACC,KAAN,CAAYC,kBAAZ,CAA+BoB,SAA/B,CAAyCC,QAAzC,GACI,UAASP,OAAT,EAAkBQ,QAAlB,EAA4BC,QAA5B,EAAsC;AACxC,SAAO,KAAKnB,OAAL,CAAaoB,OAAb,CAAqB,KAAKlB,SAAL,GACxB,8BADG,EAEHQ,OAFG,EAGHQ,QAAQ,IAAI,EAHT,EAIHd,sCAJG,EAKHe,QALG,CAAP;AAMD,CARD;AAWA;;;;;;;;;;AAQAzB,KAAK,CAACC,KAAN,CAAYQ,yBAAZ,CAAsCa,SAAtC,CAAgDC,QAAhD,GACI,UAASP,OAAT,EAAkBQ,QAAlB,EAA4B;AAC9B,SAAO,KAAKlB,OAAL,CAAaqB,SAAb,CAAuB,KAAKnB,SAAL,GAC1B,8BADG,EAEHQ,OAFG,EAGHQ,QAAQ,IAAI,EAHT,EAIHd,sCAJG,CAAP;AAKD,CAPD;;AAUAkB,MAAM,CAACC,OAAP,GAAiB7B,KAAK,CAACC,KAAvB","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for hello\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n/*eslint-disable*/\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.hello = require('./hello_service_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.hello.HelloServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.hello.HelloServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.hello.HelloRequest,\n *   !proto.hello.HelloResponse>}\n */\nconst methodDescriptor_HelloService_SayHello = new grpc.web.MethodDescriptor(\n  '/hello.HelloService/SayHello',\n  grpc.web.MethodType.UNARY,\n  proto.hello.HelloRequest,\n  proto.hello.HelloResponse,\n  /**\n   * @param {!proto.hello.HelloRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.hello.HelloResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.hello.HelloRequest,\n *   !proto.hello.HelloResponse>}\n */\nconst methodInfo_HelloService_SayHello = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.hello.HelloResponse,\n  /**\n   * @param {!proto.hello.HelloRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.hello.HelloResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.hello.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.hello.HelloResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.hello.HelloResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.hello.HelloServiceClient.prototype.sayHello =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/hello.HelloService/SayHello',\n      request,\n      metadata || {},\n      methodDescriptor_HelloService_SayHello,\n      callback);\n};\n\n\n/**\n * @param {!proto.hello.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.hello.HelloResponse>}\n *     A native promise that resolves to the response\n */\nproto.hello.HelloServicePromiseClient.prototype.sayHello =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/hello.HelloService/SayHello',\n      request,\n      metadata || {},\n      methodDescriptor_HelloService_SayHello);\n};\n\n\nmodule.exports = proto.hello;\n\n"]},"metadata":{},"sourceType":"module"}