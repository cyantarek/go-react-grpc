{"ast":null,"code":"var _jsxFileName = \"/home/cyan/Desktop/projects/go-grpc-react-todo/frontend/src/components/TodoList/TodoList.jsx\";\nimport React, { useState } from \"react\";\nimport { Icon } from \"semantic-ui-react\";\nimport TodoItem from \"../TodoItem/TodoItem\";\n\nfunction TodoList(props) {\n  let content = props.items.map((item, i) => {\n    let color = \"bg-light\";\n    let complete = \"\";\n\n    if (item.status) {\n      if (item.status === true) {\n        color = \"text-white bg-success\";\n        complete = \"complete\";\n      } else {\n        color = \"text-white bg-danger\";\n      }\n    }\n\n    return React.createElement(TodoItem, Object.assign({}, props, {\n      key: i,\n      item: item,\n      color: color,\n      complete: complete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, content)\n  /*<div>\n      {this.state.items.map((item) => {\n          let color = \"bg-light\";\n          let complete = \"\";\n           if (item.status) {\n              if (item.status === true) {\n                  color = \"text-white bg-success\";\n                  complete = \"complete\"\n              } else {\n                  color = \"text-white bg-danger\";\n              }\n          }\n          return (\n           );\n      })}\n  </div>*/\n  ;\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/cyan/Desktop/projects/go-grpc-react-todo/frontend/src/components/TodoList/TodoList.jsx"],"names":["React","useState","Icon","TodoItem","TodoList","props","content","items","map","item","i","color","complete","status"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,MAAIC,OAAO,GAAGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KAAa;AACvC,QAAIC,KAAK,GAAG,UAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,QAAIH,IAAI,CAACI,MAAT,EAAiB;AACb,UAAIJ,IAAI,CAACI,MAAL,KAAgB,IAApB,EAA0B;AACtBF,QAAAA,KAAK,GAAG,uBAAR;AACAC,QAAAA,QAAQ,GAAG,UAAX;AACH,OAHD,MAGO;AACHD,QAAAA,KAAK,GAAG,sBAAR;AACH;AACJ;;AAED,WAAO,oBAAC,QAAD,oBAAcN,KAAd;AAAqB,MAAA,GAAG,EAAEK,CAA1B;AAA6B,MAAA,IAAI,EAAED,IAAnC;AAAyC,MAAA,KAAK,EAAEE,KAAhD;AAAuD,MAAA,QAAQ,EAAEC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAda,CAAd;AAeA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,OADL;AAGA;;;;;;;;;;;;;;;;AAJJ;AAuBH;;AAED,eAAeF,QAAf","sourcesContent":["import React, {useState} from \"react\"\nimport {Icon} from \"semantic-ui-react\";\nimport TodoItem from \"../TodoItem/TodoItem\";\n\nfunction TodoList(props) {\n    let content = props.items.map((item, i) => {\n        let color = \"bg-light\";\n        let complete = \"\";\n\n        if (item.status) {\n            if (item.status === true) {\n                color = \"text-white bg-success\";\n                complete = \"complete\"\n            } else {\n                color = \"text-white bg-danger\";\n            }\n        }\n\n        return <TodoItem {...props} key={i} item={item} color={color} complete={complete}/>\n    });\n    return (\n        <div>\n            {content}\n        </div>\n        /*<div>\n            {this.state.items.map((item) => {\n                let color = \"bg-light\";\n                let complete = \"\";\n\n                if (item.status) {\n                    if (item.status === true) {\n                        color = \"text-white bg-success\";\n                        complete = \"complete\"\n                    } else {\n                        color = \"text-white bg-danger\";\n                    }\n                }\n                return (\n\n                );\n            })}\n        </div>*/\n    );\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}