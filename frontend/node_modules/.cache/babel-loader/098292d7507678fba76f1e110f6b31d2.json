{"ast":null,"code":"/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.todo.Todo', null, global);\ngoog.exportSymbol('proto.todo.TodoRequest', null, global);\ngoog.exportSymbol('proto.todo.TodoResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.todo.Todo = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.todo.Todo, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.Todo.displayName = 'proto.todo.Todo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.todo.TodoRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.todo.TodoRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.TodoRequest.displayName = 'proto.todo.TodoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.todo.TodoResponse = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.todo.TodoResponse, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.TodoResponse.displayName = 'proto.todo.TodoResponse';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.todo.Todo.prototype.toObject = function (opt_includeInstance) {\n    return proto.todo.Todo.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.todo.Todo} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.todo.Todo.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      task: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      status: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.Todo}\n */\n\n\nproto.todo.Todo.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.Todo();\n  return proto.todo.Todo.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.Todo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.Todo}\n */\n\n\nproto.todo.Todo.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setId(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setTask(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setStatus(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.todo.Todo.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.Todo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.Todo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.todo.Todo.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getId();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getTask();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getStatus();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional string id = 1;\n * @return {string}\n */\n\n\nproto.todo.Todo.prototype.getId = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.todo.Todo.prototype.setId = function (value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string task = 2;\n * @return {string}\n */\n\n\nproto.todo.Todo.prototype.getTask = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.todo.Todo.prototype.setTask = function (value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string status = 3;\n * @return {string}\n */\n\n\nproto.todo.Todo.prototype.getStatus = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/** @param {string} value */\n\n\nproto.todo.Todo.prototype.setStatus = function (value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.todo.TodoRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.todo.TodoRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.todo.TodoRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.todo.TodoRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      todo: (f = msg.getTodo()) && proto.todo.Todo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.TodoRequest}\n */\n\n\nproto.todo.TodoRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.TodoRequest();\n  return proto.todo.TodoRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.TodoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.TodoRequest}\n */\n\n\nproto.todo.TodoRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.todo.Todo();\n        reader.readMessage(value, proto.todo.Todo.deserializeBinaryFromReader);\n        msg.setTodo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.todo.TodoRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.TodoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.TodoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.todo.TodoRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTodo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.todo.Todo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional Todo todo = 1;\n * @return {?proto.todo.Todo}\n */\n\n\nproto.todo.TodoRequest.prototype.getTodo = function () {\n  return (\n    /** @type{?proto.todo.Todo} */\n    jspb.Message.getWrapperField(this, proto.todo.Todo, 1)\n  );\n};\n/** @param {?proto.todo.Todo|undefined} value */\n\n\nproto.todo.TodoRequest.prototype.setTodo = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.todo.TodoRequest.prototype.clearTodo = function () {\n  this.setTodo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.todo.TodoRequest.prototype.hasTodo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.todo.TodoResponse.prototype.toObject = function (opt_includeInstance) {\n    return proto.todo.TodoResponse.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.todo.TodoResponse} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.todo.TodoResponse.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      todo: (f = msg.getTodo()) && proto.todo.Todo.toObject(includeInstance, f)\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.TodoResponse}\n */\n\n\nproto.todo.TodoResponse.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.TodoResponse();\n  return proto.todo.TodoResponse.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.TodoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.TodoResponse}\n */\n\n\nproto.todo.TodoResponse.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value = new proto.todo.Todo();\n        reader.readMessage(value, proto.todo.Todo.deserializeBinaryFromReader);\n        msg.setTodo(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.todo.TodoResponse.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.TodoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.TodoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.todo.TodoResponse.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getTodo();\n\n  if (f != null) {\n    writer.writeMessage(1, f, proto.todo.Todo.serializeBinaryToWriter);\n  }\n};\n/**\n * optional Todo todo = 1;\n * @return {?proto.todo.Todo}\n */\n\n\nproto.todo.TodoResponse.prototype.getTodo = function () {\n  return (\n    /** @type{?proto.todo.Todo} */\n    jspb.Message.getWrapperField(this, proto.todo.Todo, 1)\n  );\n};\n/** @param {?proto.todo.Todo|undefined} value */\n\n\nproto.todo.TodoResponse.prototype.setTodo = function (value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n/**\n * Clears the message field making it undefined.\n */\n\n\nproto.todo.TodoResponse.prototype.clearTodo = function () {\n  this.setTodo(undefined);\n};\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\n\n\nproto.todo.TodoResponse.prototype.hasTodo = function () {\n  return jspb.Message.getField(this, 1) != null;\n};\n\ngoog.object.extend(exports, proto.todo);","map":{"version":3,"sources":["/home/cyan/Desktop/projects/go-grpc-react-todo/frontend/src/api/todo/todo_service_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","todo","Todo","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","TodoRequest","TodoResponse","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","id","getFieldWithDefault","task","status","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setId","setTask","setStatus","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getId","length","writeString","getTask","getStatus","setProto3StringField","getTodo","readMessage","setTodo","writeMessage","getWrapperField","setWrapperField","clearTodo","hasTodo","getField","object","extend","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.todo.Todo', null, global);\ngoog.exportSymbol('proto.todo.TodoRequest', null, global);\ngoog.exportSymbol('proto.todo.TodoResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.todo.Todo = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.todo.Todo, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.Todo.displayName = 'proto.todo.Todo';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.todo.TodoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.todo.TodoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.TodoRequest.displayName = 'proto.todo.TodoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.todo.TodoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.todo.TodoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.TodoResponse.displayName = 'proto.todo.TodoResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.todo.Todo.prototype.toObject = function(opt_includeInstance) {\n  return proto.todo.Todo.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.todo.Todo} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.Todo.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    task: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    status: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.Todo}\n */\nproto.todo.Todo.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.Todo;\n  return proto.todo.Todo.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.Todo} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.Todo}\n */\nproto.todo.Todo.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTask(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setStatus(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.todo.Todo.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.Todo.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.Todo} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.Todo.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTask();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.todo.Todo.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.Todo.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string task = 2;\n * @return {string}\n */\nproto.todo.Todo.prototype.getTask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.Todo.prototype.setTask = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string status = 3;\n * @return {string}\n */\nproto.todo.Todo.prototype.getStatus = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.Todo.prototype.setStatus = function(value) {\n  jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.todo.TodoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.todo.TodoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.todo.TodoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.TodoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    todo: (f = msg.getTodo()) && proto.todo.Todo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.TodoRequest}\n */\nproto.todo.TodoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.TodoRequest;\n  return proto.todo.TodoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.TodoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.TodoRequest}\n */\nproto.todo.TodoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.todo.Todo;\n      reader.readMessage(value,proto.todo.Todo.deserializeBinaryFromReader);\n      msg.setTodo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.todo.TodoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.TodoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.TodoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.TodoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTodo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.todo.Todo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Todo todo = 1;\n * @return {?proto.todo.Todo}\n */\nproto.todo.TodoRequest.prototype.getTodo = function() {\n  return /** @type{?proto.todo.Todo} */ (\n    jspb.Message.getWrapperField(this, proto.todo.Todo, 1));\n};\n\n\n/** @param {?proto.todo.Todo|undefined} value */\nproto.todo.TodoRequest.prototype.setTodo = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n */\nproto.todo.TodoRequest.prototype.clearTodo = function() {\n  this.setTodo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.todo.TodoRequest.prototype.hasTodo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.todo.TodoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.todo.TodoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.todo.TodoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.TodoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    todo: (f = msg.getTodo()) && proto.todo.Todo.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.TodoResponse}\n */\nproto.todo.TodoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.TodoResponse;\n  return proto.todo.TodoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.TodoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.TodoResponse}\n */\nproto.todo.TodoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.todo.Todo;\n      reader.readMessage(value,proto.todo.Todo.deserializeBinaryFromReader);\n      msg.setTodo(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.todo.TodoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.TodoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.TodoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.TodoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTodo();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.todo.Todo.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Todo todo = 1;\n * @return {?proto.todo.Todo}\n */\nproto.todo.TodoResponse.prototype.getTodo = function() {\n  return /** @type{?proto.todo.Todo} */ (\n    jspb.Message.getWrapperField(this, proto.todo.Todo, 1));\n};\n\n\n/** @param {?proto.todo.Todo|undefined} value */\nproto.todo.TodoResponse.prototype.setTodo = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\n/**\n * Clears the message field making it undefined.\n */\nproto.todo.TodoResponse.prototype.clearTodo = function() {\n  this.setTodo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {boolean}\n */\nproto.todo.TodoResponse.prototype.hasTodo = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\ngoog.object.extend(exports, proto.todo);\n"]},"metadata":{},"sourceType":"module"}