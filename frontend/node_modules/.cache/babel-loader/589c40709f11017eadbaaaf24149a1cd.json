{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for todo\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.todo = require('./todo_service_pb.js');\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\nproto.todo.TodoServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.todo.TodoServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.AllTodoResponse>}\n */\n\n\nconst methodDescriptor_TodoService_GetAllTodo = new grpc.web.MethodDescriptor('/todo.TodoService/GetAllTodo', grpc.web.MethodType.UNARY, proto.todo.CommonRequest, proto.todo.AllTodoResponse,\n/**\n * @param {!proto.todo.CommonRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.todo.AllTodoResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.AllTodoResponse>}\n */\n\nconst methodInfo_TodoService_GetAllTodo = new grpc.web.AbstractClientBase.MethodInfo(proto.todo.AllTodoResponse,\n/**\n * @param {!proto.todo.CommonRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.todo.AllTodoResponse.deserializeBinary);\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.AllTodoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.AllTodoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.todo.TodoServiceClient.prototype.getAllTodo = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/todo.TodoService/GetAllTodo', request, metadata || {}, methodDescriptor_TodoService_GetAllTodo, callback);\n};\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.AllTodoResponse>}\n *     A native promise that resolves to the response\n */\n\n\nproto.todo.TodoServicePromiseClient.prototype.getAllTodo = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/todo.TodoService/GetAllTodo', request, metadata || {}, methodDescriptor_TodoService_GetAllTodo);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.TodoRequest,\n *   !proto.todo.TodoResponse>}\n */\n\n\nconst methodDescriptor_TodoService_CreateTodo = new grpc.web.MethodDescriptor('/todo.TodoService/CreateTodo', grpc.web.MethodType.UNARY, proto.todo.TodoRequest, proto.todo.TodoResponse,\n/**\n * @param {!proto.todo.TodoRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.todo.TodoResponse.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.TodoRequest,\n *   !proto.todo.TodoResponse>}\n */\n\nconst methodInfo_TodoService_CreateTodo = new grpc.web.AbstractClientBase.MethodInfo(proto.todo.TodoResponse,\n/**\n * @param {!proto.todo.TodoRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.todo.TodoResponse.deserializeBinary);\n/**\n * @param {!proto.todo.TodoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.TodoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.TodoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.todo.TodoServiceClient.prototype.createTodo = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/todo.TodoService/CreateTodo', request, metadata || {}, methodDescriptor_TodoService_CreateTodo, callback);\n};\n/**\n * @param {!proto.todo.TodoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.TodoResponse>}\n *     A native promise that resolves to the response\n */\n\n\nproto.todo.TodoServicePromiseClient.prototype.createTodo = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/todo.TodoService/CreateTodo', request, metadata || {}, methodDescriptor_TodoService_CreateTodo);\n};\n\nmodule.exports = proto.todo;","map":{"version":3,"sources":["/home/cyan/Desktop/projects/go-grpc-react-todo/frontend/src/api/todo/todo_service_grpc_web_pb.js"],"names":["grpc","web","require","proto","todo","TodoServiceClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","TodoServicePromiseClient","methodDescriptor_TodoService_GetAllTodo","MethodDescriptor","MethodType","UNARY","CommonRequest","AllTodoResponse","request","serializeBinary","deserializeBinary","methodInfo_TodoService_GetAllTodo","AbstractClientBase","MethodInfo","prototype","getAllTodo","metadata","callback","rpcCall","unaryCall","methodDescriptor_TodoService_CreateTodo","TodoRequest","TodoResponse","methodInfo_TodoService_CreateTodo","createTodo","module","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for todo\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.todo = require('./todo_service_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.todo.TodoServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.todo.TodoServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.AllTodoResponse>}\n */\nconst methodDescriptor_TodoService_GetAllTodo = new grpc.web.MethodDescriptor(\n  '/todo.TodoService/GetAllTodo',\n  grpc.web.MethodType.UNARY,\n  proto.todo.CommonRequest,\n  proto.todo.AllTodoResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.AllTodoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.AllTodoResponse>}\n */\nconst methodInfo_TodoService_GetAllTodo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.todo.AllTodoResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.AllTodoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.AllTodoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.AllTodoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.todo.TodoServiceClient.prototype.getAllTodo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/todo.TodoService/GetAllTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_GetAllTodo,\n      callback);\n};\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.AllTodoResponse>}\n *     A native promise that resolves to the response\n */\nproto.todo.TodoServicePromiseClient.prototype.getAllTodo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/todo.TodoService/GetAllTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_GetAllTodo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.TodoRequest,\n *   !proto.todo.TodoResponse>}\n */\nconst methodDescriptor_TodoService_CreateTodo = new grpc.web.MethodDescriptor(\n  '/todo.TodoService/CreateTodo',\n  grpc.web.MethodType.UNARY,\n  proto.todo.TodoRequest,\n  proto.todo.TodoResponse,\n  /**\n   * @param {!proto.todo.TodoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.TodoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.TodoRequest,\n *   !proto.todo.TodoResponse>}\n */\nconst methodInfo_TodoService_CreateTodo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.todo.TodoResponse,\n  /**\n   * @param {!proto.todo.TodoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.TodoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.todo.TodoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.TodoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.TodoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.todo.TodoServiceClient.prototype.createTodo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/todo.TodoService/CreateTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_CreateTodo,\n      callback);\n};\n\n\n/**\n * @param {!proto.todo.TodoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.TodoResponse>}\n *     A native promise that resolves to the response\n */\nproto.todo.TodoServicePromiseClient.prototype.createTodo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/todo.TodoService/CreateTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_CreateTodo);\n};\n\n\nmodule.exports = proto.todo;\n\n"]},"metadata":{},"sourceType":"module"}