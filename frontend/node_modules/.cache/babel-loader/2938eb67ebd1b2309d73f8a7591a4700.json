{"ast":null,"code":"var _jsxFileName = \"/home/cyan/Desktop/projects/go-grpc-react-todo/frontend/src/components/TodoList/TodoList.jsx\";\nimport React, { useState } from \"react\";\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nfunction TodoList(props) {\n  console.log(props.todoState.todo);\n  let content = props.todoState.todo.map((item, i) => {\n    let color = \"bg-light\";\n    let complete = \"\";\n\n    if (item.status) {\n      if (item.status === true) {\n        color = \"text-white bg-success\";\n        complete = \"complete\";\n      } else {\n        color = \"text-white bg-danger\";\n      }\n    }\n\n    return React.createElement(TodoItem, Object.assign({}, props, {\n      key: i,\n      item: item,\n      color: color,\n      complete: complete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, content)\n  /*<div>\n      {this.state.items.map((item) => {\n          let color = \"bg-light\";\n          let complete = \"\";\n           if (item.status) {\n              if (item.status === true) {\n                  color = \"text-white bg-success\";\n                  complete = \"complete\"\n              } else {\n                  color = \"text-white bg-danger\";\n              }\n          }\n          return (\n           );\n      })}\n  </div>*/\n  ;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    commonState: state.commonState,\n    todoState: state.todoState\n  };\n}\n\nexport default connect(mapStateToProps, actions)(TodoList);","map":{"version":3,"sources":["/home/cyan/Desktop/projects/go-grpc-react-todo/frontend/src/components/TodoList/TodoList.jsx"],"names":["React","useState","TodoItem","actions","connect","TodoList","props","console","log","todoState","todo","content","map","item","i","color","complete","status","mapStateToProps","state","commonState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAN,CAAgBC,IAA5B;AACA,MAAIC,OAAO,GAAGL,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBE,GAArB,CAAyB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAChD,QAAIC,KAAK,GAAG,UAAZ;AACA,QAAIC,QAAQ,GAAG,EAAf;;AAEA,QAAIH,IAAI,CAACI,MAAT,EAAiB;AACb,UAAIJ,IAAI,CAACI,MAAL,KAAgB,IAApB,EAA0B;AACtBF,QAAAA,KAAK,GAAG,uBAAR;AACAC,QAAAA,QAAQ,GAAG,UAAX;AACH,OAHD,MAGO;AACHD,QAAAA,KAAK,GAAG,sBAAR;AACH;AACJ;;AAED,WAAO,oBAAC,QAAD,oBAAcT,KAAd;AAAqB,MAAA,GAAG,EAAEQ,CAA1B;AAA6B,MAAA,IAAI,EAAED,IAAnC;AAAyC,MAAA,KAAK,EAAEE,KAAhD;AAAuD,MAAA,QAAQ,EAAEC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAda,CAAd;AAeA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,OADL;AAGA;;;;;;;;;;;;;;;;AAJJ;AAuBH;;AAED,SAASO,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADhB;AAEHX,IAAAA,SAAS,EAAEU,KAAK,CAACV;AAFd,GAAP;AAIH;;AAED,eAAeL,OAAO,CAACc,eAAD,EAAkBf,OAAlB,CAAP,CAAkCE,QAAlC,CAAf","sourcesContent":["import React, {useState} from \"react\"\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport * as actions from \"../../actions\";\nimport {connect} from \"react-redux\";\n\nfunction TodoList(props) {\n    console.log(props.todoState.todo);\n    let content = props.todoState.todo.map((item, i) => {\n        let color = \"bg-light\";\n        let complete = \"\";\n\n        if (item.status) {\n            if (item.status === true) {\n                color = \"text-white bg-success\";\n                complete = \"complete\"\n            } else {\n                color = \"text-white bg-danger\";\n            }\n        }\n\n        return <TodoItem {...props} key={i} item={item} color={color} complete={complete}/>\n    });\n    return (\n        <div>\n            {content}\n        </div>\n        /*<div>\n            {this.state.items.map((item) => {\n                let color = \"bg-light\";\n                let complete = \"\";\n\n                if (item.status) {\n                    if (item.status === true) {\n                        color = \"text-white bg-success\";\n                        complete = \"complete\"\n                    } else {\n                        color = \"text-white bg-danger\";\n                    }\n                }\n                return (\n\n                );\n            })}\n        </div>*/\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        commonState: state.commonState,\n        todoState: state.todoState,\n    };\n}\n\nexport default connect(mapStateToProps, actions)(TodoList);"]},"metadata":{},"sourceType":"module"}