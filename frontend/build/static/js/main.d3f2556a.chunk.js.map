{"version":3,"sources":["api/hello/hello_service_grpc_web_pb.js","api/todo/todo_service_grpc_web_pb.js","actions/index.js","actions/types.js","components/Header/Header.jsx","components/UserInput/UserInput.jsx","components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/NoTodo/NoTodo.jsx","components/App/App.jsx","reducers/index.js","reducers/todoReducer.js","reducers/commonReducer.js","store/index.js","index.js","api/hello/hello_service_pb.js","api/todo/todo_service_pb.js"],"names":["grpc","web","require","proto","hello","HelloServiceClient","hostname","credentials","options","this","client_","GrpcWebClientBase","hostname_","HelloServicePromiseClient","methodDescriptor_HelloService_SayHello","MethodDescriptor","MethodType","UNARY","HelloRequest","HelloResponse","request","serializeBinary","deserializeBinary","AbstractClientBase","MethodInfo","prototype","sayHello","metadata","callback","rpcCall","unaryCall","module","exports","todo","TodoServiceClient","TodoServicePromiseClient","methodDescriptor_TodoService_GetAllTodo","CommonRequest","AllTodoResponse","getAllTodo","methodDescriptor_TodoService_CreateTodo","TodoRequest","TodoResponse","createTodo","methodDescriptor_TodoService_CompleteTodo","CommonResponse","completeTodo","methodDescriptor_TodoService_UndoTodo","undoTodo","methodDescriptor_TodoService_DeleteTodo","deleteTodo","setLoading","process","BACKEND_URL","value","dispatch","action","payload","todoClient","fetchTodo","req","type","err","resp","console","log","toObject","todoListList","id","setId","data","setTask","task","Header","props","className","UserInput","onSubmit","autoComplete","name","onChange","placeholder","connect","state","commonState","todoState","actions","color","complete","item","Icon","onClick","style","paddingRight","content","map","i","status","key","NoTodo","useEffect","useState","userInput","setUserInput","e","target","preventDefault","loading","length","combineReducers","previousState","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","jspb","goog","global","Function","exportSymbol","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","opt_includeInstance","includeInstance","msg","obj","getFieldWithDefault","$jspbMessageInstance","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readString","setName","skipField","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","getName","writeString","setProto3StringField","setMessage","getMessage","object","extend","repeatedFields_","getTask","getBooleanFieldWithDefault","createdAt","updatedAt","readBool","setStatus","setCreatedAt","setUpdatedAt","undefined","getId","getStatus","writeBool","getCreatedAt","getUpdatedAt","setProto3BooleanField","toObjectList","getTodoListList","readMessage","addTodoList","writeRepeatedMessage","getRepeatedWrapperField","setTodoListList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearTodoListList"],"mappings":"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","file":"static/js/main.d3f2556a.chunk.js","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for hello\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n/*eslint-disable*/\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.hello = require('./hello_service_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.hello.HelloServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.hello.HelloServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.hello.HelloRequest,\n *   !proto.hello.HelloResponse>}\n */\nconst methodDescriptor_HelloService_SayHello = new grpc.web.MethodDescriptor(\n  '/hello.HelloService/SayHello',\n  grpc.web.MethodType.UNARY,\n  proto.hello.HelloRequest,\n  proto.hello.HelloResponse,\n  /**\n   * @param {!proto.hello.HelloRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.hello.HelloResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.hello.HelloRequest,\n *   !proto.hello.HelloResponse>}\n */\nconst methodInfo_HelloService_SayHello = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.hello.HelloResponse,\n  /**\n   * @param {!proto.hello.HelloRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.hello.HelloResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.hello.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.hello.HelloResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.hello.HelloResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.hello.HelloServiceClient.prototype.sayHello =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/hello.HelloService/SayHello',\n      request,\n      metadata || {},\n      methodDescriptor_HelloService_SayHello,\n      callback);\n};\n\n\n/**\n * @param {!proto.hello.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.hello.HelloResponse>}\n *     A native promise that resolves to the response\n */\nproto.hello.HelloServicePromiseClient.prototype.sayHello =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/hello.HelloService/SayHello',\n      request,\n      metadata || {},\n      methodDescriptor_HelloService_SayHello);\n};\n\n\nmodule.exports = proto.hello;\n\n","/**\n * @fileoverview gRPC-Web generated client stub for todo\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n/*eslint-disable*/\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.todo = require('./todo_service_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.todo.TodoServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.todo.TodoServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.AllTodoResponse>}\n */\nconst methodDescriptor_TodoService_GetAllTodo = new grpc.web.MethodDescriptor(\n  '/todo.TodoService/GetAllTodo',\n  grpc.web.MethodType.UNARY,\n  proto.todo.CommonRequest,\n  proto.todo.AllTodoResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.AllTodoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.AllTodoResponse>}\n */\nconst methodInfo_TodoService_GetAllTodo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.todo.AllTodoResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.AllTodoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.AllTodoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.AllTodoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.todo.TodoServiceClient.prototype.getAllTodo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/todo.TodoService/GetAllTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_GetAllTodo,\n      callback);\n};\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.AllTodoResponse>}\n *     A native promise that resolves to the response\n */\nproto.todo.TodoServicePromiseClient.prototype.getAllTodo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/todo.TodoService/GetAllTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_GetAllTodo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.TodoRequest,\n *   !proto.todo.TodoResponse>}\n */\nconst methodDescriptor_TodoService_CreateTodo = new grpc.web.MethodDescriptor(\n  '/todo.TodoService/CreateTodo',\n  grpc.web.MethodType.UNARY,\n  proto.todo.TodoRequest,\n  proto.todo.TodoResponse,\n  /**\n   * @param {!proto.todo.TodoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.TodoResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.TodoRequest,\n *   !proto.todo.TodoResponse>}\n */\nconst methodInfo_TodoService_CreateTodo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.todo.TodoResponse,\n  /**\n   * @param {!proto.todo.TodoRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.TodoResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.todo.TodoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.TodoResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.TodoResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.todo.TodoServiceClient.prototype.createTodo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/todo.TodoService/CreateTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_CreateTodo,\n      callback);\n};\n\n\n/**\n * @param {!proto.todo.TodoRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.TodoResponse>}\n *     A native promise that resolves to the response\n */\nproto.todo.TodoServicePromiseClient.prototype.createTodo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/todo.TodoService/CreateTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_CreateTodo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.CommonResponse>}\n */\nconst methodDescriptor_TodoService_CompleteTodo = new grpc.web.MethodDescriptor(\n  '/todo.TodoService/CompleteTodo',\n  grpc.web.MethodType.UNARY,\n  proto.todo.CommonRequest,\n  proto.todo.CommonResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.CommonResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.CommonResponse>}\n */\nconst methodInfo_TodoService_CompleteTodo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.todo.CommonResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.CommonResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.CommonResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.CommonResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.todo.TodoServiceClient.prototype.completeTodo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/todo.TodoService/CompleteTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_CompleteTodo,\n      callback);\n};\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.CommonResponse>}\n *     A native promise that resolves to the response\n */\nproto.todo.TodoServicePromiseClient.prototype.completeTodo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/todo.TodoService/CompleteTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_CompleteTodo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.CommonResponse>}\n */\nconst methodDescriptor_TodoService_UndoTodo = new grpc.web.MethodDescriptor(\n  '/todo.TodoService/UndoTodo',\n  grpc.web.MethodType.UNARY,\n  proto.todo.CommonRequest,\n  proto.todo.CommonResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.CommonResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.CommonResponse>}\n */\nconst methodInfo_TodoService_UndoTodo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.todo.CommonResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.CommonResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.CommonResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.CommonResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.todo.TodoServiceClient.prototype.undoTodo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/todo.TodoService/UndoTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_UndoTodo,\n      callback);\n};\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.CommonResponse>}\n *     A native promise that resolves to the response\n */\nproto.todo.TodoServicePromiseClient.prototype.undoTodo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/todo.TodoService/UndoTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_UndoTodo);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.CommonResponse>}\n */\nconst methodDescriptor_TodoService_DeleteTodo = new grpc.web.MethodDescriptor(\n  '/todo.TodoService/DeleteTodo',\n  grpc.web.MethodType.UNARY,\n  proto.todo.CommonRequest,\n  proto.todo.CommonResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.CommonResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.todo.CommonRequest,\n *   !proto.todo.CommonResponse>}\n */\nconst methodInfo_TodoService_DeleteTodo = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.todo.CommonResponse,\n  /**\n   * @param {!proto.todo.CommonRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.todo.CommonResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.todo.CommonResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.todo.CommonResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.todo.TodoServiceClient.prototype.deleteTodo =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/todo.TodoService/DeleteTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_DeleteTodo,\n      callback);\n};\n\n\n/**\n * @param {!proto.todo.CommonRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.todo.CommonResponse>}\n *     A native promise that resolves to the response\n */\nproto.todo.TodoServicePromiseClient.prototype.deleteTodo =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/todo.TodoService/DeleteTodo',\n      request,\n      metadata || {},\n      methodDescriptor_TodoService_DeleteTodo);\n};\n\n\nmodule.exports = proto.todo;\n\n","import {FETCH_TODO, SET_LOADING} from \"./types\";\n\nconst {HelloServiceClient} = require(\"../api/hello/hello_service_grpc_web_pb\");\nconst {HelloRequest} = require(\"../api/hello/hello_service_pb\");\n\nlet helloClient = new HelloServiceClient(process.env.BACKEND_URL, null, null);\n\nexport const setLoading = (value) => {\n  return dispatch => {\n      dispatch({action: SET_LOADING, payload: value})\n  }\n};\n\nconst {TodoServiceClient} = require(\"../api/todo/todo_service_grpc_web_pb\");\nconst {TodoRequest, CommonRequest} = require(\"../api/todo/todo_service_pb\");\n\nlet todoClient = new TodoServiceClient(\"http://localhost:9090\", null, null);\n\nexport const fetchTodo = () => {\n    return dispatch => {\n        let req = new CommonRequest();\n\n        dispatch({type: SET_LOADING, payload: true});\n        todoClient.getAllTodo(req, {}, (err, resp) => {\n            if (resp == null) {\n                console.log(err)\n            }else {\n                dispatch({type: FETCH_TODO, payload: resp.toObject().todoListList});\n                dispatch({type: SET_LOADING, payload: false});\n            }\n        })\n    }\n};\n\nexport const completeTodo = (id) => {\n    return dispatch => {\n        let req = new CommonRequest();\n        req.setId(id);\n\n        dispatch({type: SET_LOADING, payload: true});\n        todoClient.completeTodo(req, {}, (err, resp) => {\n            if (resp == null) {\n                console.log(err)\n            }else {\n                let req = new CommonRequest();\n\n                todoClient.getAllTodo(req, {}, (err, resp) => {\n                    if (resp == null) {\n                        console.log(err)\n                    }else {\n                        dispatch({type: FETCH_TODO, payload: resp.toObject().todoListList});\n                        dispatch({type: SET_LOADING, payload: false});\n                    }\n                });\n            }\n        })\n    }\n};\n\nexport const undoTodo = (id) => {\n    return dispatch => {\n        let req = new CommonRequest();\n        req.setId(id);\n\n        dispatch({type: SET_LOADING, payload: true});\n        todoClient.undoTodo(req, {}, (err, resp) => {\n            if (resp == null) {\n                console.log(err)\n            }else {\n                let req = new CommonRequest();\n\n                todoClient.getAllTodo(req, {}, (err, resp) => {\n                    if (resp == null) {\n                        console.log(err)\n                    }else {\n                        dispatch({type: FETCH_TODO, payload: resp.toObject().todoListList});\n                        dispatch({type: SET_LOADING, payload: false});\n                    }\n                });\n            }\n        })\n    }\n};\n\nexport const deleteTodo = (id) => {\n    return dispatch => {\n        let req = new CommonRequest();\n        req.setId(id);\n\n        dispatch({type: SET_LOADING, payload: true});\n        todoClient.deleteTodo(req, {}, (err, resp) => {\n            if (resp == null) {\n                console.log(err)\n            }else {\n                let req = new CommonRequest();\n\n                todoClient.getAllTodo(req, {}, (err, resp) => {\n                    if (resp == null) {\n                        console.log(err)\n                    }else {\n                        dispatch({type: FETCH_TODO, payload: resp.toObject().todoListList});\n                        dispatch({type: SET_LOADING, payload: false});\n                    }\n                });\n            }\n        })\n    }\n};\n\nexport const createTodo = (data) => {\n    return dispatch => {\n        let req = new TodoRequest();\n\n        req.setTask(data.task);\n\n        dispatch({type: SET_LOADING, payload: true});\n\n        todoClient.createTodo(req, {}, (err, resp) => {\n            if (resp == null) {\n                console.log(err)\n            }else {\n                let req = new CommonRequest();\n\n                todoClient.getAllTodo(req, {}, (err, resp) => {\n                    if (resp == null) {\n                        console.log(err)\n                    }else {\n                        dispatch({type: FETCH_TODO, payload: resp.toObject().todoListList});\n                        dispatch({type: SET_LOADING, payload: false});\n                    }\n                });\n            }\n        });\n    }\n};","export const FETCH_TODO = \"fetch_todo\";\nexport const SET_LOADING = \"set_loading\";\nexport const CREATE_TODO = \"create_todo\";","import React from \"react\"\nimport \"./Header.css\"\n\nfunction Header(props) {\n    return (\n        <h1 className=\"title\"><span className=\"todo\">todo</span><span className=\"list\">list</span></h1>\n    );\n}\n\nexport default Header","import React from \"react\"\n\nfunction UserInput(props) {\n    return (\n        <form className=\"form form-group\" onSubmit={props.onSubmit}>\n            <input autoComplete=\"off\" className=\"form-control\" name=\"task\" value={props.value}\n                   onChange={props.onChange}\n                   placeholder=\"Create TodoList\"\n                   type=\"text\"/>\n        </form>\n    );\n}\n\nexport default UserInput","import React, {useState} from \"react\"\nimport {Icon} from \"semantic-ui-react\";\nimport \"./TodoItem.css\"\nimport * as actions from \"../../actions\";\nimport {connect} from \"react-redux\";\n\nfunction TodoItem(props) {\n    return (\n        <div className={`card ${props.color} mb-3`}>\n            <div className=\"card-header text-center\">\n                <p className={`${props.complete}`}>{props.item.task}</p>\n            </div>\n            <div className=\"card-body text-center pb-2\">\n                <div className=\"controls\">\n                    <Icon\n                        name=\"check circle\"\n                        color=\"green\"\n                        className=\"icon\"\n                        onClick={() => props.completeTodo(props.item.id)}\n                    />\n                    <span style={{paddingRight: 10}}>Done</span>\n                    <Icon\n                        name=\"undo\"\n                        color=\"yellow\"\n                        className=\"icon\"\n                        onClick={() => props.undoTodo(props.item.id)}\n                    />\n                    <span style={{paddingRight: 10}}>Undo</span>\n                    <Icon\n                        name=\"delete\"\n                        color=\"red\"\n                        className=\"icon\"\n                        onClick={() => props.deleteTodo(props.item.id)}\n                    />\n                    <span style={{paddingRight: 10}}>Delete</span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        commonState: state.commonState,\n        todoState: state.todoState,\n    };\n}\n\nexport default connect(mapStateToProps, actions)(TodoItem);","import React, {useState} from \"react\"\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport * as actions from \"../../actions\";\nimport {connect} from \"react-redux\";\n\nfunction TodoList(props) {\n    let content = props.todoState.todo.map((item, i) => {\n        let color = \"bg-light\";\n        let complete = \"\";\n\n        if (item.status) {\n            if (item.status === true) {\n                color = \"text-white bg-success\";\n                complete = \"complete\"\n            } else {\n                color = \"text-white bg-danger\";\n            }\n        }\n\n        return <TodoItem {...props} key={i} item={item} color={color} complete={complete}/>\n    });\n    return (\n        <div>\n            {content}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        commonState: state.commonState,\n        todoState: state.todoState,\n    };\n}\n\nexport default connect(mapStateToProps, actions)(TodoList);","import React, {useState} from \"react\"\n\nfunction NoTodo(props) {\n    return (\n        <div className={\"text-center\"}>\n            <h3 className={\"text-muted\"}>No Todo item</h3>\n        </div>\n    );\n}\n\nexport default NoTodo","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport * as actions from \"../../actions\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {connect} from \"react-redux\";\nimport Header from \"../Header/Header\";\nimport UserInput from \"../UserInput/UserInput\";\nimport {MoonLoader} from \"react-spinners\";\nimport TodoList from \"../TodoList/TodoList\";\nimport NoTodo from \"../NoTodo/NoTodo\";\n\nfunction App(props) {\n    useEffect(() => {\n        props.fetchTodo();\n    }, []);\n\n    const [userInput, setUserInput] = useState(\"\");\n\n    const handleUserInput = (e) => {\n        setUserInput(e.target.value)\n    };\n\n    const handleTodoSubmit = (e) => {\n        e.preventDefault();\n\n        props.createTodo({task: userInput});\n        setUserInput(\"\")\n    };\n\n    return (\n        <div className=\"container pt-5\">\n            <div className=\"row\">\n                <div className=\"col-8 offset-2 text-center header\">\n                    <Header/>\n                </div>\n            </div>\n            <div className=\"row mt-5\">\n                <div className={\"container\"}>\n                    <div className=\"col-8 offset-2\">\n                        <UserInput value={userInput} onChange={handleUserInput} onSubmit={handleTodoSubmit}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                {props.commonState.loading ? (<div className=\"col-8 offset-2 d-flex justify-content-center\">\n                    <MoonLoader/>\n                </div>) : (<div className=\"col-8 offset-2 d-block justify-content-center\">\n                    <TodoList/>\n                </div>)}\n            </div>\n            {props.todoState.todo.length === 0 && !props.commonState.loading ? (<NoTodo/>) : null}\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        commonState: state.commonState,\n        todoState: state.todoState,\n    };\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import {combineReducers} from \"redux\";\nimport todoReducer from \"./todoReducer\"\nimport commonReducer from \"./commonReducer\"\n\nexport default combineReducers({\n    todoState: todoReducer,\n    commonState: commonReducer\n},);","import {FETCH_TODO} from \"../actions/types\";\n\nexport default function (previousState = {todo: []}, action) {\n    switch (action.type) {\n        case FETCH_TODO:\n            return {\n                ...previousState,\n                todo: action.payload\n            };\n        default:\n            return {\n                ...previousState\n            }\n    }\n}","import {SET_LOADING} from \"../actions/types\";\n\nexport default function (previousState = {loading: false}, action) {\n    switch (action.type) {\n        case SET_LOADING:\n            return {\n                ...previousState,\n                loading: action.payload\n            };\n\n        default:\n            return {\n                ...previousState\n            }\n    }\n}","import {applyMiddleware, createStore} from \"redux\";\nimport reducers from \"../reducers\";\nimport thunk from \"redux-thunk\";\nconst store = createStore(reducers, {}, applyMiddleware(thunk));\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById(\"root\")\n);","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/*eslint-disable*/\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.hello.HelloRequest', null, global);\ngoog.exportSymbol('proto.hello.HelloResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.hello.HelloRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.hello.HelloRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.hello.HelloRequest.displayName = 'proto.hello.HelloRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.hello.HelloResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.hello.HelloResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.hello.HelloResponse.displayName = 'proto.hello.HelloResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.hello.HelloRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.hello.HelloRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.hello.HelloRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.hello.HelloRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.hello.HelloRequest}\n */\nproto.hello.HelloRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.hello.HelloRequest;\n  return proto.hello.HelloRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.hello.HelloRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.hello.HelloRequest}\n */\nproto.hello.HelloRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.hello.HelloRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.hello.HelloRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.hello.HelloRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.hello.HelloRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string name = 1;\n * @return {string}\n */\nproto.hello.HelloRequest.prototype.getName = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.hello.HelloRequest.prototype.setName = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.hello.HelloResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.hello.HelloResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.hello.HelloResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.hello.HelloResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.hello.HelloResponse}\n */\nproto.hello.HelloResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.hello.HelloResponse;\n  return proto.hello.HelloResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.hello.HelloResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.hello.HelloResponse}\n */\nproto.hello.HelloResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.hello.HelloResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.hello.HelloResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.hello.HelloResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.hello.HelloResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.hello.HelloResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.hello.HelloResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.hello);\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.todo.AllTodoResponse', null, global);\ngoog.exportSymbol('proto.todo.CommonRequest', null, global);\ngoog.exportSymbol('proto.todo.CommonResponse', null, global);\ngoog.exportSymbol('proto.todo.TodoRequest', null, global);\ngoog.exportSymbol('proto.todo.TodoResponse', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n/*eslint-disable*/\n\nproto.todo.TodoRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.todo.TodoRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.TodoRequest.displayName = 'proto.todo.TodoRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.todo.TodoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.todo.TodoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.TodoResponse.displayName = 'proto.todo.TodoResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.todo.CommonRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.todo.CommonRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.CommonRequest.displayName = 'proto.todo.CommonRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.todo.CommonResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.todo.CommonResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.CommonResponse.displayName = 'proto.todo.CommonResponse';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.todo.AllTodoResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.todo.AllTodoResponse.repeatedFields_, null);\n};\ngoog.inherits(proto.todo.AllTodoResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.todo.AllTodoResponse.displayName = 'proto.todo.AllTodoResponse';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.todo.TodoRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.todo.TodoRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.todo.TodoRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.TodoRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    task: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.TodoRequest}\n */\nproto.todo.TodoRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.TodoRequest;\n  return proto.todo.TodoRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.TodoRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.TodoRequest}\n */\nproto.todo.TodoRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTask(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.todo.TodoRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.TodoRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.TodoRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.TodoRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTask();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string task = 1;\n * @return {string}\n */\nproto.todo.TodoRequest.prototype.getTask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.TodoRequest.prototype.setTask = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.todo.TodoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.todo.TodoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.todo.TodoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.TodoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    task: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    status: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),\n    createdAt: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    updatedAt: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.TodoResponse}\n */\nproto.todo.TodoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.TodoResponse;\n  return proto.todo.TodoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.TodoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.TodoResponse}\n */\nproto.todo.TodoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTask(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setStatus(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setCreatedAt(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUpdatedAt(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.todo.TodoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.TodoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.TodoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.TodoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getTask();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getStatus();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getCreatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getUpdatedAt();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.todo.TodoResponse.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.TodoResponse.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string task = 2;\n * @return {string}\n */\nproto.todo.TodoResponse.prototype.getTask = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.TodoResponse.prototype.setTask = function(value) {\n  jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional bool status = 3;\n * @return {boolean}\n */\nproto.todo.TodoResponse.prototype.getStatus = function() {\n  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.todo.TodoResponse.prototype.setStatus = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional string created_at = 4;\n * @return {string}\n */\nproto.todo.TodoResponse.prototype.getCreatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.TodoResponse.prototype.setCreatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string updated_at = 5;\n * @return {string}\n */\nproto.todo.TodoResponse.prototype.getUpdatedAt = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.TodoResponse.prototype.setUpdatedAt = function(value) {\n  jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.todo.CommonRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.todo.CommonRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.todo.CommonRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.CommonRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    id: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.CommonRequest}\n */\nproto.todo.CommonRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.CommonRequest;\n  return proto.todo.CommonRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.CommonRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.CommonRequest}\n */\nproto.todo.CommonRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setId(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.todo.CommonRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.CommonRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.CommonRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.CommonRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getId();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string id = 1;\n * @return {string}\n */\nproto.todo.CommonRequest.prototype.getId = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.CommonRequest.prototype.setId = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.todo.CommonResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.todo.CommonResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.todo.CommonResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.CommonResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.CommonResponse}\n */\nproto.todo.CommonResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.CommonResponse;\n  return proto.todo.CommonResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.CommonResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.CommonResponse}\n */\nproto.todo.CommonResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.todo.CommonResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.CommonResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.CommonResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.CommonResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.todo.CommonResponse.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.todo.CommonResponse.prototype.setMessage = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.todo.AllTodoResponse.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.todo.AllTodoResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.todo.AllTodoResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.todo.AllTodoResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.AllTodoResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    todoListList: jspb.Message.toObjectList(msg.getTodoListList(),\n    proto.todo.TodoResponse.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.todo.AllTodoResponse}\n */\nproto.todo.AllTodoResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.todo.AllTodoResponse;\n  return proto.todo.AllTodoResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.todo.AllTodoResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.todo.AllTodoResponse}\n */\nproto.todo.AllTodoResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.todo.TodoResponse;\n      reader.readMessage(value,proto.todo.TodoResponse.deserializeBinaryFromReader);\n      msg.addTodoList(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.todo.AllTodoResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.todo.AllTodoResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.todo.AllTodoResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.todo.AllTodoResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTodoListList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.todo.TodoResponse.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated TodoResponse todo_list = 1;\n * @return {!Array<!proto.todo.TodoResponse>}\n */\nproto.todo.AllTodoResponse.prototype.getTodoListList = function() {\n  return /** @type{!Array<!proto.todo.TodoResponse>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.todo.TodoResponse, 1));\n};\n\n\n/** @param {!Array<!proto.todo.TodoResponse>} value */\nproto.todo.AllTodoResponse.prototype.setTodoListList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.todo.TodoResponse=} opt_value\n * @param {number=} opt_index\n * @return {!proto.todo.TodoResponse}\n */\nproto.todo.AllTodoResponse.prototype.addTodoList = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.todo.TodoResponse, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n */\nproto.todo.AllTodoResponse.prototype.clearTodoListList = function() {\n  this.setTodoListList([]);\n};\n\n\ngoog.object.extend(exports, proto.todo);\n"],"sourceRoot":""}