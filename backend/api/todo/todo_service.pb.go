// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo_service.proto

package todo

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TodoRequest struct {
	Task                 string   `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoRequest) Reset()         { *m = TodoRequest{} }
func (m *TodoRequest) String() string { return proto.CompactTextString(m) }
func (*TodoRequest) ProtoMessage()    {}
func (*TodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af1b42e10a177658, []int{0}
}

func (m *TodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoRequest.Unmarshal(m, b)
}
func (m *TodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoRequest.Marshal(b, m, deterministic)
}
func (m *TodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoRequest.Merge(m, src)
}
func (m *TodoRequest) XXX_Size() int {
	return xxx_messageInfo_TodoRequest.Size(m)
}
func (m *TodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TodoRequest proto.InternalMessageInfo

func (m *TodoRequest) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

type TodoResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Task                 string   `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Status               bool     `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            string   `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoResponse) Reset()         { *m = TodoResponse{} }
func (m *TodoResponse) String() string { return proto.CompactTextString(m) }
func (*TodoResponse) ProtoMessage()    {}
func (*TodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af1b42e10a177658, []int{1}
}

func (m *TodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoResponse.Unmarshal(m, b)
}
func (m *TodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoResponse.Marshal(b, m, deterministic)
}
func (m *TodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoResponse.Merge(m, src)
}
func (m *TodoResponse) XXX_Size() int {
	return xxx_messageInfo_TodoResponse.Size(m)
}
func (m *TodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TodoResponse proto.InternalMessageInfo

func (m *TodoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TodoResponse) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

func (m *TodoResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *TodoResponse) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *TodoResponse) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type CommonRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonRequest) Reset()         { *m = CommonRequest{} }
func (m *CommonRequest) String() string { return proto.CompactTextString(m) }
func (*CommonRequest) ProtoMessage()    {}
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_af1b42e10a177658, []int{2}
}

func (m *CommonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonRequest.Unmarshal(m, b)
}
func (m *CommonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonRequest.Marshal(b, m, deterministic)
}
func (m *CommonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonRequest.Merge(m, src)
}
func (m *CommonRequest) XXX_Size() int {
	return xxx_messageInfo_CommonRequest.Size(m)
}
func (m *CommonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommonRequest proto.InternalMessageInfo

func (m *CommonRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CommonResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonResponse) Reset()         { *m = CommonResponse{} }
func (m *CommonResponse) String() string { return proto.CompactTextString(m) }
func (*CommonResponse) ProtoMessage()    {}
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af1b42e10a177658, []int{3}
}

func (m *CommonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonResponse.Unmarshal(m, b)
}
func (m *CommonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonResponse.Marshal(b, m, deterministic)
}
func (m *CommonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonResponse.Merge(m, src)
}
func (m *CommonResponse) XXX_Size() int {
	return xxx_messageInfo_CommonResponse.Size(m)
}
func (m *CommonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommonResponse proto.InternalMessageInfo

func (m *CommonResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllTodoResponse struct {
	TodoList             []*TodoResponse `protobuf:"bytes,1,rep,name=todo_list,json=todoList,proto3" json:"todo_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AllTodoResponse) Reset()         { *m = AllTodoResponse{} }
func (m *AllTodoResponse) String() string { return proto.CompactTextString(m) }
func (*AllTodoResponse) ProtoMessage()    {}
func (*AllTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_af1b42e10a177658, []int{4}
}

func (m *AllTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTodoResponse.Unmarshal(m, b)
}
func (m *AllTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTodoResponse.Marshal(b, m, deterministic)
}
func (m *AllTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTodoResponse.Merge(m, src)
}
func (m *AllTodoResponse) XXX_Size() int {
	return xxx_messageInfo_AllTodoResponse.Size(m)
}
func (m *AllTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllTodoResponse proto.InternalMessageInfo

func (m *AllTodoResponse) GetTodoList() []*TodoResponse {
	if m != nil {
		return m.TodoList
	}
	return nil
}

func init() {
	proto.RegisterType((*TodoRequest)(nil), "todo.TodoRequest")
	proto.RegisterType((*TodoResponse)(nil), "todo.TodoResponse")
	proto.RegisterType((*CommonRequest)(nil), "todo.CommonRequest")
	proto.RegisterType((*CommonResponse)(nil), "todo.CommonResponse")
	proto.RegisterType((*AllTodoResponse)(nil), "todo.AllTodoResponse")
}

func init() { proto.RegisterFile("todo_service.proto", fileDescriptor_af1b42e10a177658) }

var fileDescriptor_af1b42e10a177658 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x4f, 0x4f, 0x83, 0x40,
	0x10, 0xc5, 0x03, 0xad, 0xb5, 0x9d, 0xd6, 0x1a, 0xd7, 0x3f, 0x21, 0x26, 0x46, 0xe4, 0x44, 0x3c,
	0x60, 0xd2, 0xc6, 0xa8, 0x47, 0xc4, 0xc4, 0x8b, 0x27, 0xd4, 0x73, 0x83, 0xdd, 0x89, 0x21, 0x02,
	0x8b, 0xec, 0xe0, 0x67, 0xf0, 0x9b, 0xf8, 0x35, 0x0d, 0xbb, 0x8b, 0x96, 0xa6, 0x17, 0xbd, 0x31,
	0x6f, 0xde, 0x8f, 0x79, 0xbc, 0x00, 0x8c, 0x04, 0x17, 0x0b, 0x89, 0xd5, 0x47, 0xba, 0xc4, 0xa0,
	0xac, 0x04, 0x09, 0xd6, 0x6f, 0x34, 0xef, 0x0c, 0xc6, 0x4f, 0x82, 0x8b, 0x18, 0xdf, 0x6b, 0x94,
	0xc4, 0x18, 0xf4, 0x29, 0x91, 0x6f, 0x8e, 0xe5, 0x5a, 0xfe, 0x28, 0x56, 0xcf, 0xde, 0xa7, 0x05,
	0x13, 0xed, 0x91, 0xa5, 0x28, 0x24, 0xb2, 0x29, 0xd8, 0x29, 0x37, 0x16, 0x3b, 0xe5, 0x3f, 0x90,
	0xfd, 0x0b, 0xb1, 0x23, 0x18, 0x48, 0x4a, 0xa8, 0x96, 0x4e, 0xcf, 0xb5, 0xfc, 0x61, 0x6c, 0x26,
	0x76, 0x02, 0xb0, 0xac, 0x30, 0x21, 0xe4, 0x8b, 0x84, 0x9c, 0xbe, 0x22, 0x46, 0x46, 0x09, 0xa9,
	0x59, 0xd7, 0x25, 0x6f, 0xd7, 0x5b, 0x7a, 0x6d, 0x94, 0x90, 0xbc, 0x53, 0xd8, 0x89, 0x44, 0x9e,
	0x8b, 0xa2, 0xcd, 0xbb, 0x16, 0xc5, 0x3b, 0x87, 0x69, 0x6b, 0x30, 0x61, 0x1d, 0xd8, 0xce, 0x51,
	0xca, 0xe4, 0x15, 0x8d, 0xad, 0x1d, 0xbd, 0x5b, 0xd8, 0x0d, 0xb3, 0xac, 0xf3, 0x65, 0x17, 0x30,
	0x52, 0x4d, 0x65, 0xa9, 0x24, 0xc7, 0x72, 0x7b, 0xfe, 0x78, 0xc6, 0x82, 0x46, 0x09, 0x56, 0x6d,
	0xf1, 0xb0, 0x91, 0x1e, 0x52, 0x49, 0xb3, 0x2f, 0x5b, 0xf7, 0xf7, 0xa8, 0xab, 0x65, 0xd7, 0x00,
	0xf7, 0x48, 0xe6, 0xb5, 0x6c, 0x5f, 0xb3, 0x9d, 0xc8, 0xc7, 0x87, 0x5a, 0x5c, 0x3f, 0x3d, 0x07,
	0x88, 0x54, 0x0d, 0x8a, 0xdc, 0x5b, 0xbd, 0xaa, 0xb9, 0x0d, 0x41, 0xd8, 0x0d, 0x4c, 0x22, 0x91,
	0x97, 0x19, 0x1a, 0x6c, 0xe3, 0xc1, 0x83, 0xae, 0x68, 0xd0, 0x4b, 0x18, 0x3e, 0x17, 0x5c, 0xfc,
	0x15, 0xbb, 0x02, 0xb8, 0xc3, 0x7f, 0xdc, 0x7b, 0x19, 0xa8, 0xbf, 0x6e, 0xfe, 0x1d, 0x00, 0x00,
	0xff, 0xff, 0xbc, 0x7e, 0x7d, 0x78, 0x8b, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoServiceClient is the client API for TodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoServiceClient interface {
	GetAllTodo(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*AllTodoResponse, error)
	CreateTodo(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoResponse, error)
	CompleteTodo(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*CommonResponse, error)
	UndoTodo(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*CommonResponse, error)
	DeleteTodo(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*CommonResponse, error)
}

type todoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoServiceClient(cc *grpc.ClientConn) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) GetAllTodo(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*AllTodoResponse, error) {
	out := new(AllTodoResponse)
	err := c.cc.Invoke(ctx, "/todo.TodoService/GetAllTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) CreateTodo(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := c.cc.Invoke(ctx, "/todo.TodoService/CreateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) CompleteTodo(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/todo.TodoService/CompleteTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) UndoTodo(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/todo.TodoService/UndoTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) DeleteTodo(ctx context.Context, in *CommonRequest, opts ...grpc.CallOption) (*CommonResponse, error) {
	out := new(CommonResponse)
	err := c.cc.Invoke(ctx, "/todo.TodoService/DeleteTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServiceServer is the server API for TodoService service.
type TodoServiceServer interface {
	GetAllTodo(context.Context, *CommonRequest) (*AllTodoResponse, error)
	CreateTodo(context.Context, *TodoRequest) (*TodoResponse, error)
	CompleteTodo(context.Context, *CommonRequest) (*CommonResponse, error)
	UndoTodo(context.Context, *CommonRequest) (*CommonResponse, error)
	DeleteTodo(context.Context, *CommonRequest) (*CommonResponse, error)
}

// UnimplementedTodoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTodoServiceServer struct {
}

func (*UnimplementedTodoServiceServer) GetAllTodo(ctx context.Context, req *CommonRequest) (*AllTodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTodo not implemented")
}
func (*UnimplementedTodoServiceServer) CreateTodo(ctx context.Context, req *TodoRequest) (*TodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTodo not implemented")
}
func (*UnimplementedTodoServiceServer) CompleteTodo(ctx context.Context, req *CommonRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteTodo not implemented")
}
func (*UnimplementedTodoServiceServer) UndoTodo(ctx context.Context, req *CommonRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndoTodo not implemented")
}
func (*UnimplementedTodoServiceServer) DeleteTodo(ctx context.Context, req *CommonRequest) (*CommonResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTodo not implemented")
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_GetAllTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).GetAllTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.TodoService/GetAllTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).GetAllTodo(ctx, req.(*CommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.TodoService/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).CreateTodo(ctx, req.(*TodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_CompleteTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).CompleteTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.TodoService/CompleteTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).CompleteTodo(ctx, req.(*CommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_UndoTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).UndoTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.TodoService/UndoTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).UndoTodo(ctx, req.(*CommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_DeleteTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).DeleteTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.TodoService/DeleteTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).DeleteTodo(ctx, req.(*CommonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todo.TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllTodo",
			Handler:    _TodoService_GetAllTodo_Handler,
		},
		{
			MethodName: "CreateTodo",
			Handler:    _TodoService_CreateTodo_Handler,
		},
		{
			MethodName: "CompleteTodo",
			Handler:    _TodoService_CompleteTodo_Handler,
		},
		{
			MethodName: "UndoTodo",
			Handler:    _TodoService_UndoTodo_Handler,
		},
		{
			MethodName: "DeleteTodo",
			Handler:    _TodoService_DeleteTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo_service.proto",
}
